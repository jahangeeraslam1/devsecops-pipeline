name: main 

on: [push] #occurs when we push our code to the repo

jobs:
  SAST_scan:
    name: Run Bandit Scan
    runs-on: ubuntu-latest #specify enviroment for job runtime - uses a fresh env on github hosted machine

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2 #copies the code to the Github hosted machine

    - name: Set Up Python #install Python on the Github hosted machine 
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install SAST Tool (Bandit)
      run: pip install bandit

    - name: Run SAST scan (Bandit)
      run: bandit -ll -ii -r . -f json -o bandit-report.json 
      #runs the app which will scan everything in the current folder (recursively looking at subfolders too)
      # flag explanation
      #        -ll means only show logs for medium and high criticalities 
      #        -ii means only show logs for medium and high confidence levels
      #        -f json specifies the format for output ( json file)
      #        -o tells the SAST tool to output the scan to bandit-report.json

    - name: Upload Scan Results 
      uses: actions/upload-artifact@v3
      if: always() # always runs this step whether the last step fails or not
      with:
        name: bandit-findings #name of findings file in GitHub Repo
        path: bandit-report.json 

  docker_image:
    name: Build Docker Image Â¶ Scan for Vulnerabilities
    runs-on: ubuntu-latest #specify fresh enviroment for job runtime 


    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set Up Docker
      uses: docker/setup-buildx-action@v1

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_AUTH_TOKEN }}

    - name: Build Docker Image
      run: docker build -f Dockerfile -t myapp:latest .
      # run indicates it will be a shell command
      # docker build is used to build a new image 
      # -f Dockerfile specifies the name and location of my dockerfile to be used for building the image 
      # -t myapp:latest tags the built image with the name myapp and the tag latest
      # . specifies the directory of where to look for the dockerfile named Dockerfile

    - name: Docker Scout
      uses: docker/scout-action@v1.13.0
      with:
        command: quickview , cves
        only-severities: critical, high
        only-fixed: true
        sarif-file: docker-scout-report.sarif

    - name: Upload Scout Report  
      uses: actions/upload-artifact@v3
      with:
        name: Docker Scout Report #name of findings file in GitHub Repo
        path: docker-scout-report.sarif

        

        

      
        

        


      
      
      
      
      
        
      
    

    
    
      
               
               

      
        
    
    

        

      
    
  
